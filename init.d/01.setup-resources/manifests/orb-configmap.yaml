apiVersion: v1
kind: ConfigMap
metadata:
  name: orb-magic
data:
  main.py: |
    #!/usr/bin/python3
    from http.server import BaseHTTPRequestHandler, HTTPServer
    from socketserver import ThreadingMixIn
    import os

    hostName = "0.0.0.0"
    serverPort = 80

    class Handler(BaseHTTPRequestHandler):
      def do_GET(self):
        if self.path == "/":
          # Respond with the answers to the universe.
          self.send_response(200)
          self.send_header("Content-type", "text/plain")
          self.end_headers()
          self.wfile.write("Magic Wisdom".encode("utf-8"))

    class ThreadedHTTPServer(ThreadingMixIn, HTTPServer):
      """Handle requests in a separate thread."""

    if __name__ == "__main__":
      chatGPTlikeModel = bytearray(os.urandom( 64 * 1000000))
      webServer = ThreadedHTTPServer((hostName, serverPort), Handler)
      print("Server started http://%s:%s" % (hostName, serverPort))

    try:
      webServer.serve_forever()
    except KeyboardInterrupt:
      pass

    webServer.server_close()
    print("Server stopped.")
